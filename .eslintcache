[{"/Users/spiderz/lighthouse/skylinks/src/index.js":"1","/Users/spiderz/lighthouse/skylinks/src/serviceWorker.js":"2","/Users/spiderz/lighthouse/skylinks/src/App.jsx":"3","/Users/spiderz/lighthouse/skylinks/src/store/index.js":"4","/Users/spiderz/lighthouse/skylinks/src/threejs/ThreeContainer.js":"5","/Users/spiderz/lighthouse/skylinks/src/store/reducer.js":"6","/Users/spiderz/lighthouse/skylinks/src/threejs/ThreeEntryPoint.js":"7","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/SearchForm.jsx":"8","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/RouteList.jsx":"9","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Slider.jsx":"10","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/ResetButton.jsx":"11","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Logo.jsx":"12","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/ScheduleListTable.jsx":"13","/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Loading.jsx":"14","/Users/spiderz/lighthouse/skylinks/src/threejs/SceneManager.js":"15","/Users/spiderz/lighthouse/skylinks/src/threejs/components/Earth.js":"16","/Users/spiderz/lighthouse/skylinks/src/threejs/components/BuildFlightRoutes.js":"17","/Users/spiderz/lighthouse/skylinks/src/threejs/components/RealTimeFlightRoutes.js":"18","/Users/spiderz/lighthouse/skylinks/src/threejs/helpers/curve.js":"19","/Users/spiderz/lighthouse/skylinks/src/threejs/components/Sun.js":"20","/Users/spiderz/lighthouse/skylinks/src/threejs/components/Clouds.js":"21","/Users/spiderz/lighthouse/skylinks/src/threejs/components/Stars.js":"22","/Users/spiderz/lighthouse/skylinks/src/threejs/components/GeneralLights.js":"23","/Users/spiderz/lighthouse/skylinks/src/threejs/helpers/constants.js":"24","/Users/spiderz/lighthouse/skylinks/src/threejs/components/RealTimePlanes.js":"25","/Users/spiderz/lighthouse/skylinks/src/threejs/components/BuildPlanes.js":"26"},{"size":706,"mtime":1609044465612,"results":"27","hashOfConfig":"28"},{"size":4951,"mtime":1574110445990,"results":"29","hashOfConfig":"28"},{"size":3764,"mtime":1610566657415,"results":"30","hashOfConfig":"28"},{"size":112,"mtime":1608880846790,"results":"31","hashOfConfig":"28"},{"size":951,"mtime":1610569366895,"results":"32","hashOfConfig":"28"},{"size":618,"mtime":1609140408638,"results":"33","hashOfConfig":"28"},{"size":1031,"mtime":1610569366899,"results":"34","hashOfConfig":"28"},{"size":550,"mtime":1610565839910,"results":"35","hashOfConfig":"28"},{"size":2681,"mtime":1609397803838,"results":"36","hashOfConfig":"28"},{"size":2584,"mtime":1610564938736,"results":"37","hashOfConfig":"28"},{"size":397,"mtime":1610416252672,"results":"38","hashOfConfig":"28"},{"size":305,"mtime":1610416247781,"results":"39","hashOfConfig":"28"},{"size":1958,"mtime":1609397795166,"results":"40","hashOfConfig":"28"},{"size":1930,"mtime":1610564404194,"results":"41","hashOfConfig":"28"},{"size":9721,"mtime":1610572092899,"results":"42","hashOfConfig":"28"},{"size":1022,"mtime":1610572283718,"results":"43","hashOfConfig":"28"},{"size":2252,"mtime":1610572409346,"results":"44","hashOfConfig":"28"},{"size":1212,"mtime":1610572409306,"results":"45","hashOfConfig":"28"},{"size":1604,"mtime":1574110446088,"results":"46","hashOfConfig":"28"},{"size":1005,"mtime":1610572420253,"results":"47","hashOfConfig":"28"},{"size":639,"mtime":1610572307959,"results":"48","hashOfConfig":"28"},{"size":773,"mtime":1610572409328,"results":"49","hashOfConfig":"28"},{"size":524,"mtime":1610572409306,"results":"50","hashOfConfig":"28"},{"size":571,"mtime":1574110446088,"results":"51","hashOfConfig":"28"},{"size":757,"mtime":1610572409306,"results":"52","hashOfConfig":"28"},{"size":1094,"mtime":1610572314312,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1p9kl61",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/spiderz/lighthouse/skylinks/src/index.js",[],["114","115"],"/Users/spiderz/lighthouse/skylinks/src/serviceWorker.js",[],"/Users/spiderz/lighthouse/skylinks/src/App.jsx",["116","117"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport ThreeContainer from \"./threejs/ThreeContainer.js\";\nimport RouteList from \"./frontcomponents/RouteList\";\nimport SearchForm from \"./frontcomponents/SearchForm\";\nimport ResetButton from \"./frontcomponents/ResetButton\";\nimport ScheduleListTable from \"./frontcomponents/ScheduleListTable\";\nimport Logo from \"./frontcomponents/Logo\";\nimport Slider from \"./frontcomponents/Slider\";\nimport Loading from \"./frontcomponents/Loading\";\n\nconst App = () => {\n  const [departureAirport, setDepartureAirport] = useState(\"\");\n  const [arrivalAirport, setArrivalAirport] = useState(\"\"); //list\n  const [departureFs, setDepartureFs] = useState(\"\"); //single\n  const [arrivalAirportFs, setArrivalAirportFs] = useState(\"\");\n  const [schedule, setSchedule] = useState(\"\");\n  const [waypoints, setWaypoints] = useState([]);\n  const [realFlightPosition, setRealFlightPosition] = useState(0);\n\n  useEffect(() => {\n    fetchData();\n  }, [departureFs]);\n\n  useEffect(() => {\n    fetchFlightSchedule();\n    fetchWaypoints();\n  }, [arrivalAirportFs]);\n\n  const fetchData = () => {\n    if (departureFs)\n      axios.get(`https://skylinks.herokuapp.com/api/airports/${departureFs}`).then((response) => {\n        if (response.data) {\n          setDepartureAirport(response.data.departure);\n          setArrivalAirport(response.data.arrival);\n        }\n      });\n  };\n\n  const fetchFlightSchedule = () => {\n    if (arrivalAirport.length === 1)\n      axios\n        .get(\n          `https://skylinks.herokuapp.com/api/schedules/from/${departureAirport.fs}/to/${arrivalAirport[0].fs}`\n        )\n        .then((response) => {\n          if (response.data) {\n            setSchedule(response.data);\n          }\n        });\n  };\n\n  const fetchWaypoints = () => {\n    let departure = \"\";\n    let arrival = \"\";\n    if (departureFs && arrivalAirportFs) {\n      departure = departureFs;\n      arrival = arrivalAirportFs;\n      axios\n        .get(`https://skylinks.herokuapp.com/api/real/from/${departure}/to/${arrival}`)\n        .then((response) => {\n          if (response.data) {\n            setWaypoints(response.data);\n          }\n        });\n    }\n  };\n\n  const arrivals = () => {};\n\n  const getDepartures = (departureAirportCode) => {\n    if (departureAirportCode === departureFs) {\n      fetchData();\n      setDepartureFs(\"\");\n      setWaypoints([]);\n    }\n    setDepartureFs(departureAirportCode.toUpperCase());\n  };\n\n  const onSelect = (selected_arrival) => {\n    setArrivalAirport([selected_arrival]);\n    setArrivalAirportFs([selected_arrival.fs][0]);\n  };\n\n  const onClear = () => {\n    setDepartureAirport(\"\");\n    setArrivalAirport(\"\");\n    setSchedule(\"\");\n    setDepartureFs(\"\");\n    setArrivalAirportFs(\"\");\n    setWaypoints([]);\n  };\n\n  return (\n    <>\n      <Loading />\n      <Logo />\n      <ScheduleListTable\n        newDeparture={departureAirport}\n        newArrival={arrivalAirport}\n        newSchedule={schedule}\n      ></ScheduleListTable>\n      <RouteList\n        newDeparture={departureAirport}\n        newArrival={arrivalAirport}\n        getDepartures={getDepartures}\n        onSelect={onSelect}\n      ></RouteList>\n      <ResetButton onClear={onClear}></ResetButton>\n      <SearchForm getArrival={arrivals} getDepartures={getDepartures} />\n      {waypoints.length > 0 ? (\n        <Slider\n          realFlightPosition={realFlightPosition}\n          setRealFlightPosition={setRealFlightPosition}\n          waypoints={waypoints}\n        />\n      ) : null}\n      <ThreeContainer\n        waypoints={waypoints}\n        realFlightPosition={realFlightPosition}\n        newDeparture={departureAirport}\n        newArrival={arrivalAirport}\n      />\n    </>\n  );\n};\n\nexport default App;\n","/Users/spiderz/lighthouse/skylinks/src/store/index.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/ThreeContainer.js",["118"],"import React, { useEffect, useRef, useState } from \"react\";\nimport ThreeEntryPoint from \"./ThreeEntryPoint\";\n\nexport default function ThreeContainer(props) {\n  const [state, setState] = useState(null);\n\n  let threeMount = useRef(null);\n  useEffect(() => {\n    const sceneManager = ThreeEntryPoint(threeMount);\n    setState(sceneManager);\n  }, []);\n\n  useEffect(() => {\n    if (props.realFlightPosition && props.waypoints.length > 0) {\n      state.updatePosition(props.realFlightPosition, props.waypoints);\n    }\n  }, [props.realFlightPosition]);\n\n  if (state) {\n    state.clear();\n    state.addEntity({\n      departure: props.newDeparture,\n      arrival: props.newArrival,\n      waypoints: props.waypoints,\n    });\n    if (props.waypoints.length === 0) {\n      state.clearAirPlane3d();\n    }\n  }\n\n  const style = {\n    height: \"100vh\",\n    overflow: \"hidden\",\n    zIndex: \"0\",\n  };\n\n  return <div style={style} ref={(ref) => (threeMount = ref)} />;\n}\n","/Users/spiderz/lighthouse/skylinks/src/store/reducer.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/ThreeEntryPoint.js",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/SearchForm.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/RouteList.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Slider.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/ResetButton.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Logo.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/ScheduleListTable.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/frontcomponents/Loading.jsx",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/SceneManager.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/Earth.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/BuildFlightRoutes.js",["119"],"import * as THREE from \"three\";\n\nimport { getSplineFromCoords } from \"../helpers/curve\";\nimport { CURVE_SEGMENTS } from \"../helpers/constants\";\nimport BuildPlanes from \"./BuildPlanes\";\n\nexport default function BuildFlightRoutes(scene, airport) {\n  if (airport.departure && airport.arrival[0]) {\n    const group = new THREE.Group();\n    /**\n     * returns a filtedred list if airports\n     * @param  {} name_of_airport, the of the airport\n     * @param  {} list_of_airports\n     */\n\n    function makeLineInstance(departure_airport, arrival_airport, curve_material) {\n      const startCoor = [\n        parseFloat(departure_airport.latitude),\n        parseFloat(departure_airport.longitude),\n      ];\n      const endCoor = [parseFloat(arrival_airport.latitude), parseFloat(arrival_airport.longitude)];\n      const { spline } = getSplineFromCoords(startCoor, endCoor);\n      const points = spline.getPoints(CURVE_SEGMENTS);\n      const curve_geometry = new THREE.BufferGeometry().setFromPoints(points);\n\n      const plane = BuildPlanes(spline);\n\n      const curvedLine = new THREE.Line(curve_geometry, curve_material);\n      curvedLine.name = `line_${departure_airport.fs}_${arrival_airport.fs}`;\n      curvedLine.departure_fs = departure_airport.fs;\n      curvedLine.arrival_fs = arrival_airport.fs;\n      curvedLine.arrivalObject = {\n        fs: arrival_airport.fs,\n        name: arrival_airport.name,\n        latitude: arrival_airport.latitude,\n        longitude: arrival_airport.longitude,\n      };\n      curvedLine.add(plane);\n\n      return curvedLine;\n    }\n\n    function routesPerAirport(airport) {\n      for (const arrival of airport.arrival) {\n        const departure_airport = airport.departure;\n        const arrival_airport = arrival;\n        const curve_material = new THREE.MeshBasicMaterial({\n          blending: THREE.AdditiveBlending,\n          opacity: 0.7,\n          transparent: true,\n          color: 0xe85d33,\n        });\n        const line = makeLineInstance(departure_airport, arrival_airport, curve_material);\n        if (line) {\n          group.add(line);\n        }\n      }\n    }\n\n    routesPerAirport(airport);\n\n    group.name = \"routes\";\n\n    scene.add(group);\n\n    function update() {}\n\n    return {\n      update,\n    };\n  }\n}\n","/Users/spiderz/lighthouse/skylinks/src/threejs/components/RealTimeFlightRoutes.js",["120"],"import * as THREE from \"three\";\n\nimport { coordinateToPosition } from \"../helpers/curve\";\nimport RealTimePlanes from \"./RealTimePlanes\";\n\nexport default function RealTimeFlightRoutes(scene, waypoints) {\n  if (waypoints) {\n    const group = new THREE.Group();\n    var mat = new THREE.LineBasicMaterial({ color: 0xff0000 });\n\n    function createPath(positions) {\n      const points = [];\n      for (const pos of positions) {\n        const lat = parseFloat(pos.position.latitude);\n        const long = parseFloat(pos.position.longitude);\n        const alt = parseFloat(pos.position.altitude);\n        const position_Vector3 = coordinateToPosition(lat, long, 5 + alt * (5 / 20902000) * 30);\n        points.push(position_Vector3);\n      }\n      const curve_geometry = new THREE.BufferGeometry().setFromPoints(points);\n      var line = new THREE.Line(curve_geometry, mat);\n      line.name = \"waypointsLine\";\n\n      const plane = RealTimePlanes(points);\n      plane.name = \"realTimePlane\";\n      plane.points = points;\n      line.add(plane);\n\n      group.add(line);\n    }\n    createPath(waypoints);\n\n    group.name = \"realRoute\";\n    scene.add(group);\n\n    function update() {}\n\n    return {\n      update,\n    };\n  }\n}\n","/Users/spiderz/lighthouse/skylinks/src/threejs/helpers/curve.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/Sun.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/Clouds.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/Stars.js",["121"],"import * as THREE from \"three\";\nimport { CURVE_SEGMENTS, GLOBE_RADIUS } from \"../helpers/constants\";\n\nexport default function Stars(scene, textureLoader) {\n  const sphere = new THREE.SphereGeometry(GLOBE_RADIUS * 15, CURVE_SEGMENTS, CURVE_SEGMENTS);\n  const map = textureLoader.load(\"https://skylinks.herokuapp.com/api/textures/milkyway_4k.jpg\");\n  map.wrapS = THREE.RepeatWrapping;\n  map.wrapT = THREE.RepeatWrapping;\n  map.magFilter = THREE.NearestFilter;\n\n  const material = new THREE.MeshBasicMaterial({\n    map: map,\n    side: THREE.BackSide,\n  });\n  const background = new THREE.Mesh(sphere, material);\n  background.name = \"background\";\n\n  scene.add(background);\n  background.rotation.z += (Math.PI / 180) * 63;\n\n  function update() {}\n\n  return {\n    update,\n  };\n}\n","/Users/spiderz/lighthouse/skylinks/src/threejs/components/GeneralLights.js",["122"],"import * as THREE from \"three\";\nimport { DirectionalLightX, DirectionalLightY, DirectionalLightZ } from \"../helpers/constants\";\n\nexport default function GeneralLights(scene) {\n  //Create a new ambient light\n  let lightA = new THREE.AmbientLight(0x444444);\n  scene.add(lightA);\n  //Create a new directional light\n  let lightD = new THREE.DirectionalLight(0xffffff, 1);\n  lightD.position.set(DirectionalLightX, DirectionalLightY, DirectionalLightZ);\n  scene.add(lightD);\n\n  function update() {}\n\n  return {\n    update,\n  };\n}\n","/Users/spiderz/lighthouse/skylinks/src/threejs/helpers/constants.js",[],"/Users/spiderz/lighthouse/skylinks/src/threejs/components/RealTimePlanes.js",["123"],"import * as THREE from \"three\";\n\nexport default function RealTimePlanes(points) {\n  var textureLoader = new THREE.TextureLoader();\n\n  // let counter = 0;\n\n  // let dir = new THREE.Vector3();\n  // dir.subVectors(points[0], points[points.length - 1]).normalize();\n\n  let geo = new THREE.PlaneBufferGeometry(0.2, 0.2, 0.1, 0.1);\n  let mat = new THREE.MeshBasicMaterial({\n    map: textureLoader.load(\"https://skylinks.herokuapp.com/api/textures/plane.png\"),\n    transparent: true,\n  });\n  let plane = new THREE.Mesh(geo, mat);\n\n  return plane;\n\n  // function moveontrack() {\n  //   if (counter <= 1) {\n  //     plane.position.copy(points[Math.floor(counter * points.length)]);\n\n  //     counter += 0.005;\n  //   } else {\n  //     counter = 0;\n  //   }\n  // }\n}\n","/Users/spiderz/lighthouse/skylinks/src/threejs/components/BuildPlanes.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":24,"column":6,"nodeType":"130","endLine":24,"endColumn":19,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":24,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"134","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":32,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":7,"column":1,"nodeType":"138","endLine":83,"endColumn":3},{"ruleId":"136","severity":1,"message":"137","line":6,"column":1,"nodeType":"138","endLine":46,"endColumn":3},{"ruleId":"136","severity":1,"message":"137","line":4,"column":1,"nodeType":"138","endLine":32,"endColumn":3},{"ruleId":"136","severity":1,"message":"137","line":8,"column":1,"nodeType":"138","endLine":22,"endColumn":3},{"ruleId":"136","severity":1,"message":"137","line":3,"column":1,"nodeType":"138","endLine":31,"endColumn":3},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'fetchFlightSchedule' and 'fetchWaypoints'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'props.waypoints' and 'state'. Either include them or remove the dependency array.",["143"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [departureFs, fetchData]",{"range":"150","text":"151"},"Update the dependencies array to be: [arrivalAirportFs, fetchFlightSchedule, fetchWaypoints]",{"range":"152","text":"153"},"Update the dependencies array to be: [props.realFlightPosition, props.waypoints, state]",{"range":"154","text":"155"},[1017,1030],"[departureFs, fetchData]",[1108,1126],"[arrivalAirportFs, fetchFlightSchedule, fetchWaypoints]",[517,543],"[props.realFlightPosition, props.waypoints, state]"]